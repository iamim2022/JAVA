package p0414;

public class p04_반올림버림처리 {
//#4. 원하는 자릿수 반올림, 버림처리
	public static void main(String[] args) {
		int k38_ii = 12345;		//12345원은 10원이하 버려서 처리하기
		int k38_j = (k38_ii/10)*10;	
		//12345 / 10 = 1234 => 1234 * 10 = 12340
		System.out.printf("#4-1 : %d\n", k38_j);
		
		//////
		k38_ii = 12345;	//12345원은 10원 이하 반올림 처리
		k38_j = ((k38_ii + 5) / 10) * 10;	//10으로 나눈 뒤 또 10을 곱해 버림실행
			//!!!5부터 반올림되니까 5을 더했다. 10의 반올림은 무조건 +5를 더한다.
			//0~4는 버림처리됨.
			//(12345+5)= 12350 => 12350 / 10 => 1235 => 1235 * 10 = 12350
			//123454가 12350이 된다.
		System.out.printf("#4-2 : %d\n", k38_j);
		
		//////
		k38_ii = 12344;	//12344원은 10원 이하 반올림 처리
		k38_j = ((k38_ii + 5) / 10) * 10;	//식 검증
		//12344+5 = 12349 => 12349 / 10 = 1234 => 1234 * 10 = 12340
		//반올림하면 12344 => 일의자리가 5미만이라 버려진다. 
		System.out.printf("#4-3 : %d\n", k38_j);
		
		//#4-3. 100원이하 버림
		k38_ii = 12345;
		
		//100원 이하 버림
		k38_j = (k38_ii / 100) * 100;
		System.out.printf("#4-4 : %d\n", k38_j);
		//12345 => 12345 / 100 = 123 => 123 * 100 = 12300
		
		//#4-5. 100원 이하 올림
		k38_ii = 12345;
		k38_j = ((k38_ii + 100) / 100) * 100;
		System.out.printf("#4-5 : %d\n", k38_j);
		//10의 단위에서 올림처리위해 100을 더한다._10의 자리는 고려하지 않고 100의자리만 올리면 되기때문
		//12345 => 12400 / 100 = 124 => 124 * 100 = 12400		
		
		//#4-6. 1000원 이하 버림
		k38_ii = 12345;
		k38_j = (k38_ii / 1000) * 1000;
		System.out.printf("#4-6 : %d\n", k38_j);
		//12345 => 12345 / 1000 = 12 => 12 * 1000 = 12000		
		
		//#4-7. 1000원 이하 반올림
		k38_ii = 12345;
		k38_j = ((k38_ii + 500) / 1000) * 1000;
		System.out.printf("#4-7 : %d\n", k38_j);			
	}
}
